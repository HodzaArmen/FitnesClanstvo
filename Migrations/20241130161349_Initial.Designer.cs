// <auto-generated />
using System;
using FitnesClanstvo.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FitnesClanstvo.Migrations
{
    [DbContext(typeof(FitnesContext))]
    [Migration("20241130161349_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("FitnesClanstvo.Models.Clan", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DatumRojstva")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Ime")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Priimek")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Clani");
                });

            modelBuilder.Entity("FitnesClanstvo.Models.Clanstvo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ClanId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Konec")
                        .HasColumnType("datetime2");

                    b.Property<int?>("Tip")
                        .HasColumnType("int");

                    b.Property<DateTime>("Zacetek")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ClanId");

                    b.ToTable("Clanstva");
                });

            modelBuilder.Entity("FitnesClanstvo.Models.Placilo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ClanstvoId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DatumPlacila")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Znesek")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18, 2)");

                    b.HasKey("Id");

                    b.HasIndex("ClanstvoId");

                    b.ToTable("Placila");
                });

            modelBuilder.Entity("FitnesClanstvo.Models.Prisotnost", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ClanId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DatumPrisotnosti")
                        .HasColumnType("datetime2");

                    b.Property<int>("VadbaId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ClanId");

                    b.HasIndex("VadbaId");

                    b.ToTable("Prisotnosti");
                });

            modelBuilder.Entity("FitnesClanstvo.Models.Rezervacija", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ClanId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DatumRezervacije")
                        .HasColumnType("datetime2");

                    b.Property<int>("VadbaId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ClanId");

                    b.HasIndex("VadbaId");

                    b.ToTable("Rezervacije");
                });

            modelBuilder.Entity("FitnesClanstvo.Models.Vadba", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DatumInUra")
                        .HasColumnType("datetime2");

                    b.Property<int>("Ime")
                        .HasColumnType("int");

                    b.Property<int>("Kapaciteta")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Vadbe");
                });

            modelBuilder.Entity("FitnesClanstvo.Models.Clanstvo", b =>
                {
                    b.HasOne("FitnesClanstvo.Models.Clan", "Clan")
                        .WithMany()
                        .HasForeignKey("ClanId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Clan");
                });

            modelBuilder.Entity("FitnesClanstvo.Models.Placilo", b =>
                {
                    b.HasOne("FitnesClanstvo.Models.Clanstvo", "Clanstvo")
                        .WithMany()
                        .HasForeignKey("ClanstvoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Clanstvo");
                });

            modelBuilder.Entity("FitnesClanstvo.Models.Prisotnost", b =>
                {
                    b.HasOne("FitnesClanstvo.Models.Clan", "Clan")
                        .WithMany()
                        .HasForeignKey("ClanId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FitnesClanstvo.Models.Vadba", "Vadba")
                        .WithMany()
                        .HasForeignKey("VadbaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Clan");

                    b.Navigation("Vadba");
                });

            modelBuilder.Entity("FitnesClanstvo.Models.Rezervacija", b =>
                {
                    b.HasOne("FitnesClanstvo.Models.Clan", "Clan")
                        .WithMany()
                        .HasForeignKey("ClanId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FitnesClanstvo.Models.Vadba", "Vadba")
                        .WithMany()
                        .HasForeignKey("VadbaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Clan");

                    b.Navigation("Vadba");
                });
#pragma warning restore 612, 618
        }
    }
}
